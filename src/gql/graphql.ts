/* eslint-disable */
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: { input: any; output: any; }
};

/** Autogenerated input type of LoginMutation */
export type LoginMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

/** Autogenerated return type of LoginMutation. */
export type LoginMutationPayload = {
  __typename?: 'LoginMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  user: User;
};

export type Mutation = {
  __typename?: 'Mutation';
  login?: Maybe<LoginMutationPayload>;
  sendResetPasswordEmail?: Maybe<SendResetPasswordEmailMutationPayload>;
  signUp?: Maybe<SignUpMutationPayload>;
};


export type MutationLoginArgs = {
  input: LoginMutationInput;
};


export type MutationSendResetPasswordEmailArgs = {
  input: SendResetPasswordEmailMutationInput;
};


export type MutationSignUpArgs = {
  input: SignUpMutationInput;
};

export type Query = {
  __typename?: 'Query';
  user: User;
};


export type QueryUserArgs = {
  id: Scalars['ID']['input'];
};

/** Autogenerated input type of SendResetPasswordEmailMutation */
export type SendResetPasswordEmailMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
};

/** Autogenerated return type of SendResetPasswordEmailMutation. */
export type SendResetPasswordEmailMutationPayload = {
  __typename?: 'SendResetPasswordEmailMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  user: User;
};

/** Autogenerated input type of SignUpMutation */
export type SignUpMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  name: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

/** Autogenerated return type of SignUpMutation. */
export type SignUpMutationPayload = {
  __typename?: 'SignUpMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  user: User;
};

export type User = {
  __typename?: 'User';
  createdAt: Scalars['ISO8601DateTime']['output'];
  email: Scalars['String']['output'];
  expiredTime: Scalars['ISO8601DateTime']['output'];
  id: Scalars['ID']['output'];
  jti: Scalars['String']['output'];
  name: Scalars['String']['output'];
  resetJti?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['ISO8601DateTime']['output'];
};

/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: { input: any; output: any; }
};

/** Autogenerated input type of LoginMutation */
export type LoginMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

/** Autogenerated return type of LoginMutation. */
export type LoginMutationPayload = {
  __typename?: 'LoginMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  user: User;
};

export type Mutation = {
  __typename?: 'Mutation';
  login?: Maybe<LoginMutationPayload>;
  sendResetPasswordEmail?: Maybe<SendResetPasswordEmailMutationPayload>;
  signUp?: Maybe<SignUpMutationPayload>;
};


export type MutationLoginArgs = {
  input: LoginMutationInput;
};


export type MutationSendResetPasswordEmailArgs = {
  input: SendResetPasswordEmailMutationInput;
};


export type MutationSignUpArgs = {
  input: SignUpMutationInput;
};

export type Query = {
  __typename?: 'Query';
  user: User;
};


export type QueryUserArgs = {
  id: Scalars['ID']['input'];
};

/** Autogenerated input type of SendResetPasswordEmailMutation */
export type SendResetPasswordEmailMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
};

/** Autogenerated return type of SendResetPasswordEmailMutation. */
export type SendResetPasswordEmailMutationPayload = {
  __typename?: 'SendResetPasswordEmailMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  user: User;
};

/** Autogenerated input type of SignUpMutation */
export type SignUpMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  name: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

/** Autogenerated return type of SignUpMutation. */
export type SignUpMutationPayload = {
  __typename?: 'SignUpMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  user: User;
};

export type User = {
  __typename?: 'User';
  createdAt: Scalars['ISO8601DateTime']['output'];
  email: Scalars['String']['output'];
  expiredTime: Scalars['ISO8601DateTime']['output'];
  id: Scalars['ID']['output'];
  jti: Scalars['String']['output'];
  name: Scalars['String']['output'];
  resetJti?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['ISO8601DateTime']['output'];
};
